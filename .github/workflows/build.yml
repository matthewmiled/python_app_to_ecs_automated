permissions:
  id-token: write
  contents: read

name: Build

on:
  pull_request:
    types:
      - closed

jobs:

  if-merged:
    if: github.event.pull_request.merged == true

    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: docker-test
      AWS_REGION: us-west-2
      AWS_ACCOUNT_ID: 707768507475
      ECR_REPO_NAME: eks-demo
      IAM_ROLE: github-actions

    steps:
    - uses: actions/checkout@v3


    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: eks-demo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
        
    #- name: Configure AWS credentials
      #uses: aws-actions/configure-aws-credentials@v1
      #with:
        #role-to-assume: arn:aws:iam::707768507475:role/github-actions
        #aws-region: us-west-2

    #- name: Build the Docker image
      #run: docker build -t $DOCKER_IMAGE_NAME .

    #- name: Push Docker image to ECR
      #run: |
        #aws ecr get-login-password --region $AWS_REGION| docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
        #docker tag $DOCKER_IMAGE_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:latest
        #docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:latest
     
    #- name: Install kubectl
      #uses: tale/kubectl-action@v1
      #with:
       # base64-kube-config: ${{ secrets.KUBECONFIG }}
       
    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0'
      id: install
      
    - name: Update kube config
      run: aws eks update-kubeconfig --name test-cluster --region us-east-2
      
    - name: Deploy to EKS
      run: | 
        kubectl get pods

        

       

